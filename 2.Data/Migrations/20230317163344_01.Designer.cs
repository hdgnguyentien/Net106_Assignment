// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2.Data.DbContexts;

#nullable disable

namespace _2.Data.Migrations
{
    [DbContext(typeof(DoAnNhanhDbContext))]
    [Migration("20230317163344_01")]
    partial class _01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_2.Data.ModelsClass.Combo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhCombo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdDoUong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMonAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDoUong");

                    b.HasIndex("IdMonAn");

                    b.ToTable("Combo", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.DoUong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDoUong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DoUong", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDoUong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMonAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCombo");

                    b.HasIndex("IdDoUong");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdMonAn");

                    b.ToTable("GioHangChiTiet", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdNhanVien");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdComBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDoUong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMonAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdComBo");

                    b.HasIndex("IdDoUong");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdMonAn");

                    b.ToTable("HoaDonChiTiet", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.Loai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Loai", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.MonAn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhMonAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdLoai")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdLoai");

                    b.ToTable("MonAn", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdGuiBaoCao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBcNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdGuiBcNavigationId");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.Combo", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.DoUong", "doUong")
                        .WithMany("combos")
                        .HasForeignKey("IdDoUong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.Data.ModelsClass.MonAn", "monAn")
                        .WithMany("combos")
                        .HasForeignKey("IdMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doUong");

                    b.Navigation("monAn");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHang", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.KhachHang", "khachHang")
                        .WithMany("gioHangs")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khachHang");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHangChiTiet", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.Combo", "combo")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdCombo");

                    b.HasOne("_2.Data.ModelsClass.DoUong", "doUong")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdDoUong");

                    b.HasOne("_2.Data.ModelsClass.GioHang", "gioHang")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdGioHang");

                    b.HasOne("_2.Data.ModelsClass.MonAn", "monAn")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdMonAn");

                    b.Navigation("combo");

                    b.Navigation("doUong");

                    b.Navigation("gioHang");

                    b.Navigation("monAn");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDon", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.Data.ModelsClass.NhanVien", "nhanVien")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khachHang");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDonChiTiet", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.Combo", "combo")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdComBo");

                    b.HasOne("_2.Data.ModelsClass.DoUong", "doUong")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdDoUong");

                    b.HasOne("_2.Data.ModelsClass.HoaDon", "hoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdHoaDon");

                    b.HasOne("_2.Data.ModelsClass.MonAn", "monAn")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdMonAn");

                    b.Navigation("combo");

                    b.Navigation("doUong");

                    b.Navigation("hoaDon");

                    b.Navigation("monAn");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.MonAn", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.Loai", "loai")
                        .WithMany("monAns")
                        .HasForeignKey("IdLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("loai");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.NhanVien", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.NhanVien", "IdGuiBcNavigation")
                        .WithMany("InverseIdGuiBcNavigation")
                        .HasForeignKey("IdGuiBcNavigationId");

                    b.Navigation("IdGuiBcNavigation");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.Combo", b =>
                {
                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.DoUong", b =>
                {
                    b.Navigation("combos");

                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHang", b =>
                {
                    b.Navigation("gioHangChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.KhachHang", b =>
                {
                    b.Navigation("gioHangs");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.Loai", b =>
                {
                    b.Navigation("monAns");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.MonAn", b =>
                {
                    b.Navigation("combos");

                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.NhanVien", b =>
                {
                    b.Navigation("InverseIdGuiBcNavigation");

                    b.Navigation("hoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
